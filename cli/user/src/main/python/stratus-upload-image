#!/usr/bin/env python

import os
import sys

sys.path.append('/usr/lib/stratuslab')
sys.path.append(os.path.abspath('%s/../src/' % os.path.abspath(os.path.dirname(__file__))))

from stratuslab.UploadParser import buildUploadParser
from stratuslab.UploadParser import checkUploadOptions
from stratuslab.CommandBase import CommandBase
from stratuslab.Util import manifestExt
from stratuslab.Uploader import Uploader

class MainProgram(CommandBase):
    '''A command-line program to upload StratusLab appliance.'''

    def __init__(self):
        self.manifest = None
        super(MainProgram, self).__init__()

    def parse(self):
        self.parser.usage = 'usage: %prog [options] manifest'
        buildUploadParser(self.parser)
                
        self.options, self.args = self.parser.parse_args()

    def checkOptions(self):
        if self.options.listCompressionFormat:
            Uploader.availableCompressionFormat(True)
        
        if len(self.args) != 1:
            self.parser.error('Please specify an appliance manifest')
        self.manifest = self.args[0]

        checkUploadOptions(self.options, self.parser)

        if not self.manifest.endswith(manifestExt):
            self.parser.error('Manifest must ends with %s' % manifestExt)
        if not os.path.isfile(self.manifest):
            self.parser.error('Appliance manifest does not exist')
        if not os.path.isfile(self.manifest.replace(manifestExt, '')):
            self.parser.error('Appliance does not exist')

    def doWork(self):
        uploader = Uploader(self.manifest, self.options.__dict__)
        uploader.start()
        

if __name__ == '__main__':
    try:
        MainProgram()
    except KeyboardInterrupt:
        print '\n\nExecution interrupted by the user... goodbye!'
