#!/usr/bin/env python

import os
import sys
from optparse import OptionParser

sys.path.append('/var/lib/stratuslab/python')

from stratuslab.Util import modulePath
from stratuslab.CommandBase import CommandBase
from stratuslab.InstallatorFactory import InstallatorFactory
from stratuslab.Monitor import Monitor
from stratuslab.ConfigHolder import ConfigHolder


class MainProgram(CommandBase):
    '''A command-line program to monitor the state of virtual machines.'''

    def __init__(self):
        self.vmIds = []
        super(MainProgram, self).__init__()

    def parse(self):
        usage = '''usage: %prog [options] [vm-id]
Without the parameter [vm-id] the command lists the available vms'''

        self.parser.usage=usage
        
        self.parser.add_option('-u', '--username', dest='oneUsername',
                help='cloud username. Default STRATUSLAB_USERNAME',
                default=os.getenv('STRATUSLAB_USERNAME', ''))

        self.parser.add_option('-p', '--password', dest='onePassword',
                help='cloud password. Default STRATUSLAB_PASSWORD',
                default=os.getenv('STRATUSLAB_PASSWORD', ''))

        self.parser.add_option('--endpoint', dest='endpoint',
                help='cloud endpoint address. Default STRATUSLAB_ENDPOINT',
                default=os.getenv('STRATUSLAB_ENDPOINT', ''))

        self.options, self.vmIds = self.parser.parse_args()

    def checkOptions(self):
        if not self.options.oneUsername:
            self.parser.error('Missing -u/--username')
        if not self.options.onePassword:
            self.parser.error('Missing -p/--password')
        if not self.options.endpoint:
            self.parser.error('Missing --endpoint')


    def doWork(self):
        configHolder = ConfigHolder(self.options.__dict__)
        monitor = Monitor(configHolder)
        if self.vmIds:
            list = monitor.vmDetail(self.vmIds)
            monitor.printVmDetails(list)
        else:
            list = monitor.listVms()
            monitor.printVmList(list)
            
if __name__ == '__main__':
    try:
        MainProgram()
    except KeyboardInterrupt:
        print '\n\nExecution interrupted by the user... goodbye!'
