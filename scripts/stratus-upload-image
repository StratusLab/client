#!/usr/bin/env python

import os
import sys
from optparse import OptionParser

sys.path.append('/usr/lib/stratuslab')
sys.path.append(os.path.abspath('%s/../src/' % os.path.abspath(os.path.dirname(__file__))))

from stratuslab.Uploader import Uploader
from stratuslab.Util import modulePath
from stratuslab.CommandBase import CommandBase
from stratuslab.Util import parseConfig

class MainProgram(CommandBase):
    '''A command-line program to upload StratusLab image.'''

    def __init__(self):
        super(MainProgram, self).__init__()

    def parse(self):
        usage = 'usage: %prog [options] manifest'

        self.parser = OptionParser(usage=usage)
        self.parser.add_option('-c', '--config', dest='configFile',
                help='configuration file', metavar='FILE',
                default='%s/conf/stratuslab.cfg' % modulePath)
        self.parser.add_option('-r', '--repo', dest='repoAddress',
                help='appliance repository address', metavar='FILE',
                default=None)
        self.parser.add_option('-t', '--protocol', dest='uploadProtocol',
                help='upload protocol', default='https', metavar='NAME')
        self.parser.add_option('-o', '--option', dest='option',
                help='additional option for upload', default='')
        self.parser.add_option('-u', '--username', dest='username',
                default=os.getenv('STRATUS_USER', None))
        self.parser.add_option('-p', '--password', dest='password',
                default=os.getenv('STRATUS_PASSWORD', None))

        self.options, self.args = self.parser.parse_args()

    def parseOptions(self):
        if not os.path.isfile(self.options.configFile):
            self.parser.error('Configuration file does not exist')

        self.config = parseConfig(self.options.configFile)

        if len(self.args) != 1:
            self.parser.error('Please specify an appliance manifest')

        self.manifest = self.args[0]

        if not os.path.isfile(self.manifest):
            self.parser.error('Appliance manifest does not exist')

        if not os.path.isfile(self.manifest.replace('.manifest.xml', '')):
            self.parser.error('Appliance does not exist')

        if not self.options.uploadProtocol in Uploader.availableProtocol():
            self.parser.error('Unknow upload protocol.\nAvalable: %s' % ', '.join(Uploader.availableProtocol()))

        if not self.options.repoAddress:
            self.options.repoAddress = self.config.get('app_repo_url')

        if not self.options.username:
            self.options.username = self.config.get('app_repo_username')

        if not self.options.password:
            self.options.password = self.config.get('app_repo_password')
        

    def doWork(self):
        self.parseOptions()
        uploader = Uploader(self.config, self.manifest, self.options)
        uploader.start()
        

if __name__ == '__main__':
    try:
        MainProgram()
    except KeyboardInterrupt:
        print '\n\nExecution interrupted by the user... goodbye!'
