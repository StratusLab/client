#!/usr/bin/env python

import sys

import os
from optparse import OptionParser

sys.path.append('/usr/lib/stratuslab')
sys.path.append(os.path.abspath('%s/../src/' % os.path.abspath(os.path.dirname(__file__))))

import stratuslab
from stratuslab.CommandBase import CommandBase   
from stratuslab.Configurator import Configurator

class MainProgram(CommandBase):
    '''A command-line program to configure StratusLab.'''

    def __init__(self):
        super(MainProgram, self).__init__()

    def parse(self):
        self.modulePath = os.path.abspath('%s/../' % os.path.abspath(os.path.dirname(stratuslab.__file__)))
        usage = 'usage: %prog [options] [key value]'
        self.parser = OptionParser(usage=usage)
        self.parser.add_option('-c', '--config', dest='configFile', help='default configuration file', metavar='FILE', default='%s/conf/stratuslab.cfg.ref' % self.modulePath)
        self.parser.add_option('-k', '--keys', dest='showDefaultKeys', help='display keys and default value', action="store_true", default=False)
        self.parser.add_option('-r', action='store_true', dest='revert', default=False, help='remove previous configuration')
        self.options, self.args = self.parser.parse_args()

    def doWork(self):
        configurator = Configurator(self.options.configFile)

        if self.options.revert:
            configurator.revertConfig()
        elif self.options.showDefaultKeys:
            configurator.displayDefaultKeys()
        elif len(self.args) == 0:
            configurator.writeUserConfig()
        else:
            self.checkArgumentsLength(len)
            configurator.setOption(key=self.args[0], value=self.args[1])

    def checkArgumentsLength(self, len):
        if len(self.args) < 2:
            raise self.usageExitTooFewArguments()
        elif len(self.args) > 2:
            raise self.usageExitTooManyArguments()
            

if __name__ == '__main__':
    try:
        MainProgram()
    except KeyboardInterrupt:
        print '\n\nExecution interrupted by the user... goodbye!'
