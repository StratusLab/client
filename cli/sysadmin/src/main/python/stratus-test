#!/usr/bin/env python
#
# Created as part of the StratusLab project (http://stratuslab.eu),
# co-funded by the European Commission under the Grant Agreement
# INFSO-RI-261552."
#
# Copyright (c) 2010, SixSq Sarl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import os
import sys
from optparse import OptionParser

sys.path.append('/var/lib/stratuslab/python')

import stratuslab
from stratuslab.CommandBase import CommandBase
from stratuslab.Testor import Testor
from stratuslab.ConfigHolder import ConfigHolder
import stratuslab.Util as Util

class MainProgram(CommandBase):
    '''A command-line program to test StratusLab.'''

    def __init__(self):
        super(MainProgram, self).__init__()

    def parse(self):
        usage = '''usage: %prog [options] [test] ...\n\n
where test is a comma separated list of tests, according to the name provided by -l/--list.'''

        self.parser.usage = usage
        self.parser.add_option('-c', '--config', dest='configFile',
                               help='configuration file', metavar='PATH',
                               default=Util.defaultConfigFile)

        self.parser.add_option('-l', '--list', dest='listTests',
                               help='list available tests', action='store_true',
                               default=False)

        self.parser.add_option('--app-repo-username', dest='appRepoUsername',
                               help='Appliance repository username', metavar='USERNAME',
                               default=None)

        self.parser.add_option('--app-repo-password', dest='appRepoPassword',
                               help='Appliance repository password', metavar='PASSWORD',
                               default=None)

        self.parser.add_option('--requested-ip-address', dest='requestedIpAddress',
                               help='IP address for requested IP address assignment', metavar='IP',
                               default=None)

        self.parser.add_option('--exclude', dest='testsToExclude',
                               help='list of tests to exclude (comma separated)',
                               default='', metavar='TESTS')

        self.options, self.tests = self.parser.parse_args()

    def doWork(self):
        config = ConfigHolder.configFileToDict(self.options.configFile)
        configHolder = ConfigHolder(self.options.__dict__, config)
        Testor.configHolder = configHolder
        Testor.testNames = self.tests
        testor = Testor()

        if self.options.listTests:
            self._listTests(testor)
        else:
            self._runTests(testor)

    def _listTests(self, testor):
        testor.listAvalableTests()

    def _runTests(self, testor):
        wasSuccessful = testor.runTests()
        if not wasSuccessful:
            sys.exit(-1)


if __name__ == '__main__':
    try:
        MainProgram()
    except KeyboardInterrupt:
        print '\n\nExecution interrupted by the user... goodbye!'
        sys.exit(1)
